FACTS

1.1. constructors are ignored
1.2. a no-argument constructor is expected for all classes involved in the generation process
1.3. TODO getters/setters methods are ignored
1.4. all based on reflection/ execution speed is not an issue since random data is useful for tests

2.1 public inner classes fields are generated
2.2 public static inner classes fields are generated
2.3 not public classes are ignored by default (there is a setting to raise exception on encountering)
2.4 ignore package/class/field/field per class setting is present

3.1. 2 strategies SETTERS/FIELDS, default setters 
3.2. static fields are ignored
3.3. synthetic fields are ignored
3.4. final fields are processed based on setting (default no)

4.1. all primitive wrapper classes are treated as primitives
4.2. java.lang.Enum is treated as primitive
4.3. java.lang.String is treated as primitive
4.4. java.util.Date is treated as primitive
4.5. java.math.BigInteger is treated as primitive
4.6. java.math.BigDecimal is treated as primitive
4.7. java java.sql.Date is treated as primitive
4.8. java java.sql.Timestamp is treated as primitive

5.1. arrays are always re-created
5.2. only null collection data members are created 
5.3. TODO find a way to handle Map 
5.4. custom generators per (class canonical name/ field name/ field name in class canonical name) can be configured
5.5. custom ignored (classes/field names/field names per class) can be configured

6.1 'oracle like' sequence generator available

TODO

0. iterable/array mixed in another iterable/array
1. when no empty constructor exists => use one with primitives ???
8. better string values generated based on hash code and property name
9. better tests
10. detect cycling when instantiating beans
13. return a list of uninstantiable classes???
11. parent child jpa mapping like
14. use setter/field strategy
12. 'Creators' ??? classes that create other classes? (useful for maps/collections)


XXX
1. when objects are already present ??? add setting
3. when many values in a enum generate enough beans in collection???